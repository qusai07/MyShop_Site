
@page "/addons"
@using MyShop_Site.Models
@using MyShop_Site.Services
@inject PlanService PlanService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>Customize Your Plan - MyShop</PageTitle>

<div class="container-fluid mt-4">
    <div class="row">
        <!-- Left Section -->
        <div class="col-md-8">
            <h2>Customize Your Subscription</h2>
            
            <!-- Billing Cycle Toggle -->
            <div class="card mb-4">
                <div class="card-body">
                    <h5>Billing Cycle</h5>
                    <div class="d-flex align-items-center">
                        <span class="me-3">Monthly</span>
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" @bind="isYearly" @bind:event="onchange" id="billingCycleToggle">
                        </div>
                        <span class="ms-3">Yearly <span class="badge bg-success">Save 17%</span></span>
                    </div>
                </div>
            </div>

            <!-- Number of Users -->
            <div class="card mb-4">
                <div class="card-body">
                    <h5>Number of Users</h5>
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <input type="number" @bind="numberOfUsers" @bind:event="oninput" min="1" class="form-control" />
                        </div>
                        <div class="col-md-6">
                            <small class="text-muted">$5.00 per user per @(isYearly ? "year" : "month")</small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Add-Ons -->
            <div class="card mb-4">
                <div class="card-body">
                    <h5>Add-Ons</h5>
                    @foreach (var addon in addons)
                    {
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" 
                                   @bind="addon.IsSelected" @bind:event="onchange"
                                   id="addon-@addon.Id">
                            <label class="form-check-label w-100" for="addon-@addon.Id">
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <strong>@addon.Name</strong>
                                        <p class="small text-muted mb-0">@addon.Description</p>
                                    </div>
                                    <div class="text-end">
                                        <strong>$@((isYearly ? addon.YearlyPrice : addon.MonthlyPrice).ToString("F2"))</strong>
                                        <div class="small text-muted">per @(isYearly ? "year" : "month")</div>
                                    </div>
                                </div>
                            </label>
                        </div>
                    }
                </div>
            </div>

            <!-- System Configuration -->
            <div class="card mb-4">
                <div class="card-body">
                    <h5>System Configuration</h5>
                    
                    <div class="mb-3">
                        <label class="form-label">Server Works</label>
                        <select class="form-select" @bind="serverType" @bind:event="onchange">
                            <option value="Cloud">Cloud-based (Default)</option>
                            <option value="OnPremise">On-premise</option>
                        </select>
                    </div>

                    @if (serverType == "Cloud")
                    {
                        <div class="mb-3">
                            <label class="form-label">Server Configuration</label>
                            <select class="form-select" @bind="serverConfiguration">
                                <option value="SharedVM">Shared VM (Default)</option>
                                <option value="SingleVM">Single VM</option>
                            </select>
                        </div>
                    }
                    else if (serverType == "OnPremise")
                    {
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Server URL</label>
                                <input type="url" @bind="serverUrl" class="form-control" placeholder="https://your-server.com" />
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Server Capacity</label>
                                <input type="text" @bind="serverCapacity" class="form-control" placeholder="e.g., 100GB" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Right Section - Summary -->
        <div class="col-md-4">
            <div class="card sticky-top">
                <div class="card-header">
                    <h5>Order Summary</h5>
                </div>
                <div class="card-body">
                    @if (selectedPlan != null)
                    {
                        <div class="mb-3">
                            <h6>@selectedPlan.Name Plan</h6>
                            <div class="d-flex justify-content-between">
                                <span>Base price</span>
                                <span>$@((isYearly ? selectedPlan.YearlyPrice : selectedPlan.MonthlyPrice).ToString("F2"))</span>
                            </div>
                        </div>

                        <div class="mb-3">
                            <div class="d-flex justify-content-between">
                                <span>Users (@numberOfUsers)</span>
                                <span>$@(CalculateUsersCost().ToString("F2"))</span>
                            </div>
                        </div>

                        @if (addons.Any(a => a.IsSelected))
                        {
                            <div class="mb-3">
                                <h6>Add-ons</h6>
                                @foreach (var addon in addons.Where(a => a.IsSelected))
                                {
                                    <div class="d-flex justify-content-between small">
                                        <span>@addon.Name</span>
                                        <span>$@((isYearly ? addon.YearlyPrice : addon.MonthlyPrice).ToString("F2"))</span>
                                    </div>
                                }
                            </div>
                        }

                        <hr>
                        
                        @if (isYearly && selectedPlan.YearlyDiscount > 0)
                        {
                            <div class="d-flex justify-content-between text-success">
                                <span>Yearly Discount</span>
                                <span>-$@(CalculateYearlyDiscount().ToString("F2"))</span>
                            </div>
                            <hr>
                        }

                        <div class="d-flex justify-content-between h5">
                            <strong>Total</strong>
                            <strong>$@(CalculateTotal().ToString("F2"))</strong>
                        </div>
                        
                        <div class="small text-muted mb-3">
                            per @(isYearly ? "year" : "month")
                        </div>

                        <div class="mb-3">
                            <small class="text-muted">
                                <strong>Server:</strong> @serverType
                                @if (serverType == "Cloud")
                                {
                                    <text>(@serverConfiguration)</text>
                                }
                            </small>
                        </div>
                    }
                    
                    <button class="btn btn-primary w-100" @onclick="ProceedToPayment">
                        Proceed to Payment
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] [SupplyParameterFromQuery] public int PlanId { get; set; }
    [Parameter] [SupplyParameterFromQuery] public bool Yearly { get; set; }

    private Plan selectedPlan;
    private List<AddOnModel> addons = new List<AddOnModel>();
    private bool isYearly;
    private int numberOfUsers = 1;
    private string serverType = "Cloud";
    private string serverConfiguration = "SharedVM";
    private string serverUrl = "";
    private string serverCapacity = "";

    protected override void OnInitialized()
    {
        selectedPlan = PlanService.GetPlanById(PlanId);
        isYearly = Yearly;
        
        var availableAddons = PlanService.GetAllAddOns();
        addons = availableAddons.Select(a => new AddOnModel
        {
            Id = a.Id,
            Name = a.Name,
            Description = a.Description,
            MonthlyPrice = a.MonthlyPrice,
            YearlyPrice = a.YearlyPrice,
            Sequence = a.Sequence,
            IsSelected = false
        }).ToList();
    }

    private decimal CalculateUsersCost()
    {
        var pricePerUser = isYearly ? 60m : 5m; // $5/month or $60/year per user
        return Math.Max(0, numberOfUsers - 1) * pricePerUser; // First user is included in base plan
    }

    private decimal CalculateAddOnsCost()
    {
        return addons.Where(a => a.IsSelected).Sum(a => isYearly ? a.YearlyPrice : a.MonthlyPrice);
    }

    private decimal CalculateYearlyDiscount()
    {
        if (!isYearly || selectedPlan == null) return 0;
        
        var monthlyTotal = selectedPlan.MonthlyPrice + CalculateUsersCost() / 12 + CalculateAddOnsCost() / 12;
        var yearlyTotal = selectedPlan.YearlyPrice + CalculateUsersCost() + CalculateAddOnsCost();
        
        return Math.Max(0, (monthlyTotal * 12) - yearlyTotal);
    }

    private decimal CalculateTotal()
    {
        if (selectedPlan == null) return 0;
        
        var basePrice = isYearly ? selectedPlan.YearlyPrice : selectedPlan.MonthlyPrice;
        var usersCost = CalculateUsersCost();
        var addonsCost = CalculateAddOnsCost();
        
        return basePrice + usersCost + addonsCost;
    }

    private void ProceedToPayment()
    {
        var queryParams = new List<string>
        {
            $"planId={PlanId}",
            $"yearly={isYearly}",
            $"users={numberOfUsers}",
            $"serverType={serverType}",
            $"serverConfig={serverConfiguration}"
        };

        if (!string.IsNullOrEmpty(serverUrl))
            queryParams.Add($"serverUrl={Uri.EscapeDataString(serverUrl)}");
            
        if (!string.IsNullOrEmpty(serverCapacity))
            queryParams.Add($"serverCapacity={Uri.EscapeDataString(serverCapacity)}");

        var selectedAddonIds = addons.Where(a => a.IsSelected).Select(a => a.Id);
        if (selectedAddonIds.Any())
            queryParams.Add($"addons={string.Join(",", selectedAddonIds)}");

        Navigation.NavigateTo($"/payment?{string.Join("&", queryParams)}");
    }

    public class AddOnModel : AddOn
    {
        public bool IsSelected { get; set; }
    }
}
