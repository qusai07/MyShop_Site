
@page "/products"
@page "/products/{category?}"

<PageTitle>Products - MyShop</PageTitle>

<div class="container-fluid py-5">
    <div class="row">
        <div class="col-lg-3">
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <h6 class="mb-0"><i class="fas fa-filter me-2"></i>Categories</h6>
                </div>
                <div class="card-body p-0">
                    <div class="list-group list-group-flush">
                        <a href="/products" class="list-group-item list-group-item-action @(string.IsNullOrEmpty(Category) ? "active" : "")">
                            <i class="fas fa-th me-2"></i>All Products
                        </a>
                        <a href="/products/hardware" class="list-group-item list-group-item-action @(Category == "hardware" ? "active" : "")">
                            <i class="fas fa-server me-2"></i>Hardware
                        </a>
                        <a href="/products/products" class="list-group-item list-group-item-action @(Category == "products" ? "active" : "")">
                            <i class="fas fa-box me-2"></i>Products
                        </a>
                        <a href="/products/apps" class="list-group-item list-group-item-action @(Category == "apps" ? "active" : "")">
                            <i class="fas fa-mobile-alt me-2"></i>Apps
                        </a>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-lg-9">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="fw-bold">@GetCategoryTitle()</h2>
                    <p class="text-muted">@GetCategoryDescription()</p>
                </div>
                <div class="d-flex gap-2">
                    <select class="form-select" style="width: auto;">
                        <option>Sort by: Popular</option>
                        <option>Price: Low to High</option>
                        <option>Price: High to Low</option>
                        <option>Name: A to Z</option>
                    </select>
                </div>
            </div>
            
            <div class="row g-4">
                @foreach (var product in GetFilteredProducts())
                {
                    <div class="col-lg-4 col-md-6">
                        <div class="card h-100 product-card border-0 shadow-sm">
                            <div class="card-body p-4">
                                <div class="text-center mb-3">
                                    <div class="bg-@GetCategoryColor(product.Category) bg-opacity-10 rounded-circle d-inline-flex align-items-center justify-content-center" 
                                         style="width: 80px; height: 80px;">
                                        <i class="fas fa-@GetCategoryIcon(product.Category) fa-2x text-@GetCategoryColor(product.Category)"></i>
                                    </div>
                                </div>
                                <h5 class="card-title fw-bold">@product.Name</h5>
                                <p class="card-text text-muted small">@product.Description</p>
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <span class="badge bg-@GetCategoryColor(product.Category)">@product.Category</span>
                                    <span class="fw-bold text-primary fs-5">$@product.Price/mo</span>
                                </div>
                                <a href="/product/@product.Id" class="btn btn-outline-primary w-100">
                                    <i class="fas fa-eye me-2"></i>View Details
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public string? Category { get; set; }
    
    private string GetCategoryTitle()
    {
        return Category switch
        {
            "hardware" => "Hardware Solutions",
            "products" => "Business Products",
            "apps" => "Applications",
            _ => "All Products"
        };
    }
    
    private string GetCategoryDescription()
    {
        return Category switch
        {
            "hardware" => "Enterprise-grade servers, networking equipment, and infrastructure solutions",
            "products" => "Business management tools, software solutions, and productivity suites",
            "apps" => "Mobile applications, web platforms, and custom software solutions",
            _ => "Browse our complete catalog of hardware, products, and applications"
        };
    }
    
    private List<ProductDto> GetFilteredProducts()
    {
        var allProducts = new List<ProductDto>
        {
            new() { Id = 1, Name = "Enterprise Server Pro", Category = "Hardware", Description = "High-performance server for enterprise workloads", Price = 299 },
            new() { Id = 2, Name = "Business CRM Suite", Category = "Products", Description = "Complete customer relationship management platform", Price = 49 },
            new() { Id = 3, Name = "Mobile Analytics App", Category = "Apps", Description = "Real-time mobile analytics and reporting", Price = 19 },
            new() { Id = 4, Name = "Network Security Hub", Category = "Hardware", Description = "Advanced firewall and security appliance", Price = 199 },
            new() { Id = 5, Name = "Project Management Pro", Category = "Products", Description = "Comprehensive project management software", Price = 29 },
            new() { Id = 6, Name = "E-commerce Platform", Category = "Apps", Description = "Full-featured online store application", Price = 79 }
        };
        
        if (string.IsNullOrEmpty(Category))
            return allProducts;
            
        return allProducts.Where(p => p.Category.Equals(Category, StringComparison.OrdinalIgnoreCase)).ToList();
    }
    
    private string GetCategoryColor(string category)
    {
        return category switch
        {
            "Hardware" => "primary",
            "Products" => "success",
            "Apps" => "info",
            _ => "secondary"
        };
    }
    
    private string GetCategoryIcon(string category)
    {
        return category switch
        {
            "Hardware" => "server",
            "Products" => "box",
            "Apps" => "mobile-alt",
            _ => "cube"
        };
    }
    
    public class ProductDto
    {
        public int Id { get; set; }
        public string Name { get; set; } = "";
        public string Category { get; set; } = "";
        public string Description { get; set; } = "";
        public decimal Price { get; set; }
    }
}
